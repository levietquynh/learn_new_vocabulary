I/ CHECKOUT BRANCH & PUSH TO NEW BRANCH

* Assume on master branch *
1. git pull
2. git checkout -b <your branch name>
3. git branch
4. <edit-change code on local>
5. git status
6. git add .
7. git status
8. git commit -m "Add file1, file 2, file 3"
9. git push origin <your branch name>
10. Create PR

* On the other child branch *
1. git branch
2. git checkout master
3. git pull 
4. git checkout -b <your new branch name>
5. git branch
6. <edit-change code on local>
7. git status
8. git add .
9. git status
10. git commit -m "Add file1, file 2, file 3"
11. git push origin <your new branch name>
12. Create PR

II. REBASE
* Rebase: Assume user is on branch want to rebase *

- Rebase not conflict 
1. git checkout master
2. git pull
3. git checkout <your branch name>
4. Do something code on local
5. git status
6. git add .
7. git status
8. git commit -m "add file abc" 
9. git rebase master
10. git push -f origin <your branch name>
11. Create PR

- Rebase conflict
1. git checkout master
2. git pull
3. git checkout <your branch name>
4. Do something code on local
5. git status
6. git add .
7. git status
8. git commit -m "update file abc"
9. git checkout master
10. git pull /*to verify a user take a latest code before rebasing*/
11. git checkout <your branch name>
12. git rebase master
13. Handle conflict /*compare and accept current/incomming/both....*/
14. git add .
15. git rebase --continue
16. Handle conflict again /*if still exists conflicts*/
17. git add .
18. Do step 14 and 16 again until there is no conflict left
19. git push -f origin <your branch name>
20. Create PR